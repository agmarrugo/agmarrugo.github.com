<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blog | andres marrugo]]></title>
  <link href="http://andresmarrugo.net/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://andresmarrugo.net/"/>
  <updated>2016-01-30T01:19:58-05:00</updated>
  <id>http://andresmarrugo.net/</id>
  <author>
    <name><![CDATA[Andres Marrugo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Get Fridays]]></title>
    <link href="http://andresmarrugo.net/blog/2016/01/30/get-fridays/"/>
    <updated>2016-01-30T00:58:00-05:00</updated>
    <id>http://andresmarrugo.net/blog/2016/01/30/get-fridays</id>
    <content type="html"><![CDATA[<p>So, I was preparing my clases for the upcoming semester and I wanted to produce an outline of the lectures with the corresponding date and topic. For instance I have a class that’s once a week every Friday. I could look up the calendar and write every date, which is what I initially did. But then I though, I could write a script for this. And that’s when I entered the rabbit hole.<sup id="fnref:fn1"><a href="#fn:fn1" rel="footnote">1</a></sup></p>

<p>The script I’m showing here went through several iterations. I had several difficulties until I got it to work. I wasn’t pleased with it, so I fiddled a bit more. Later when I saw Dr Drang’s post about <a href="http://leancrew.com/all-this/2016/01/formatting-multimarkdown-tables-with-numpy-and-tabulate/" title="Formatting MultiMarkdown tables with NumPy and tabulate - All this">formatting multimarkdown tables with tabulate</a>, I knew I had to use that. So I did. Here’s the script.</p>

<p>```python get_fridays.py https://github.com/agmarrugo/PythonScripts/blob/master/get_fridays.py Link</p>

<p>import calendar
from tabulate import tabulate</p>

<p>c = calendar.Calendar(firstweekday=calendar.MONDAY)</p>

<p>year = 2016
months = [2,3,4,5]
monthName = {k: v for k,v in enumerate(calendar.month_abbr)}</p>

<p>listFridays = []
for month in months:</p>

<pre><code>monthcal = c.monthdatescalendar(year,month)  

for week in monthcal:
    for day in week:
        if day.weekday() == calendar.FRIDAY and day.month == month:
            listFridays.append([monthName[day.month]+" "+str(day.day)," "," "])
</code></pre>

<p>headers = [“Date”,”Lecture”,”Lecture Topics”]</p>

<p>print tabulate(listFridays,headers,tablefmt=’pipe’)
```</p>

<p>As you can see, the script is quite simple. I give it the year and the months. The loops go over the months, and then the weeks and it looks up the friday of that week. On line 18, I have to append the white spaces <code>" "</code> and convert day to <code>str</code> in order to get three columns per day, so that tabulate gives me back a nifty formatted table. Another cool thing is that tabulate can also output in LaTeX format.</p>

<p>The script will produce this:</p>

<pre><code>| Date   | Lecture   | Lecture Topics   |
|:-------|:----------|:-----------------|
| Feb 5  |           |                  |
| Feb 12 |           |                  |
| Feb 19 |           |                  |
| Feb 26 |           |                  |
| Mar 4  |           |                  |
| Mar 11 |           |                  |
| Mar 18 |           |                  |
| Mar 25 |           |                  |
| Apr 1  |           |                  |
| Apr 8  |           |                  |
| Apr 15 |           |                  |
| Apr 22 |           |                  |
| Apr 29 |           |                  |
| May 6  |           |                  |
| May 13 |           |                  |
| May 20 |           |                  |
| May 27 |           |                  |
</code></pre>

<p>As you can see it works. However, by now you’re wondering, but what about holidays. The script should be smart enough to exclude holidays. I am implementing this, but I’ll leave it for a future post. When rendered looks something like this:</p>

<div class="aic" style="width:460px"><img src="https://dl.dropboxusercontent.com/u/5279729/blog-pics/Screen%20Shot%202016-01-30%20at%2000.43.36.png" alt="" width="" height="" border="0" /><br /></div>

<div class="footnotes">
  <ol>
    <li id="fn:fn1">
      <p>Don’t we all?<a href="#fnref:fn1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
